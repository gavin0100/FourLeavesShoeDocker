version: '3.7'

services:
  docker-mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: fourleavesshoe2
      MYSQL_ROOT_PASSWORD: duc2112002
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - "3307:3306"
    volumes:
      - fourleavesshoe2-volume:/var/lib/mysql
      - ./db/fourleavesshoe2.sql:/docker-entrypoint-initdb.d/fourleavesshoe2.sql
  back-end:
    image: gavinvo/springboot_filtro:latest
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://back-end:8080/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
    ports:
      - "8080:8080"
    environment:
      DB_HOST: docker-mysql
      LOG_ADDRESS: /app/logs/elk-stack.log
      SPRING_REDIS_HOST: redis # Tên dịch vụ Redis (được đặt trong phần networks)
      SPRING_REDIS_PORT: 6379 # Cổng Redis
      URL_MINIO: http://127.0.0.1:9000/
      BUCKET_NAME: fourleavesshoedocker
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - elk-logs:/app/logs
    depends_on:
      docker-mysql:
        condition: service_healthy
  redis:
    image: redis:5.0.14-alpine3.14
    restart: always
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/dаta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
#    depends_on:
#      back-end:
#        condition: service_healthy
  minio:
    image: quay.io/minio/minio:RELEASE.2024-08-26T15-33-07Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
#      - minio-volume:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --console-address ":9001" /data


volumes:
  fourleavesshoe2-volume:
  elk-logs:
#  minio-volume: